# Travis CI is used to build the editor and export templates for macOS and iOS.
#
# Download builds: https://bintray.com/calinou/godot/editor/_latestVersion#files
# GitHub repository: https://github.com/Calinou/godot-builds
#
# This build script is licensed under CC0 1.0 Universal:
# https://creativecommons.org/publicdomain/zero/1.0/

language: cpp

os:
  - osx

env:
  global:
    - SCONS_OPTIONS="progress=no -j$(sysctl -n hw.logicalcpu)"
    - DEPLOY_SERVER="hugo.pro"
    - DEPLOY_USER="hugo"
    - DEPLOY_PATH="/var/www/godot.hugo.pro/builds"
  matrix:
    - PLATFORM=osx TARGET=editor
    - PLATFORM=osx TARGET=templates
    - PLATFORM=iphone TARGET=templates

before_script:
  - brew update
  - brew install scons
  - git clone --depth=1 https://github.com/godotengine/godot.git
  - mkdir -p artifacts/editor/ artifacts/templates/
  - cd godot/
  - patch methods.py ../always_tty.patch

# For macOS, pretend 64-bit templates to be fat binaries, just in case
# macOS editor and templates are built in separate jobs to avoid exceeding time limits
# For iOS, compile only release templates (to avoid exceeding time limits on Travis CI),
# and copy them as debug templates as well (to avoid errors in the export dialog of the editor)
script:
  - if [ "$PLATFORM" = "osx" ]; then
      if [ "$TARGET" = "editor" ]; then
        scons platform=osx bits=64 tools=yes target=release_debug $SCONS_OPTIONS;
        mkdir -p godot_dmg/;
        cp -r misc/dist/osx_tools.app/ godot_dmg/Godot.app/;
        mkdir -p godot_dmg/Godot.app/Contents/MacOS/;
        cp bin/godot.osx.opt.tools.64 godot_dmg/Godot.app/Contents/MacOS/Godot;
        git clone --depth=1 https://github.com/Calinou/create-dmg.git;
        cd create-dmg/;
        ./create-dmg --volname "Godot" --volicon "../godot_dmg/Godot.app/Contents/Resources/Godot.icns" --hide-extension "Godot.app" ../../artifacts/editor/Godot-macOS-x86_64.dmg ../godot_dmg/;
      fi;
      if [ "$TARGET" = "templates" ]; then
        scons platform=osx bits=64 tools=no target=release_debug $SCONS_OPTIONS;
        scons platform=osx bits=64 tools=no target=release $SCONS_OPTIONS;
        mv misc/dist/osx_template.app/ osx_template.app/;
        mkdir -p osx_template.app/Contents/MacOS/;
        mv bin/godot.osx.opt.debug.64 osx_template.app/Contents/MacOS/godot_osx_debug.fat;
        mv bin/godot.osx.opt.64 osx_template.app/Contents/MacOS/godot_osx_release.fat;
        zip -r9 ../artifacts/templates/osx.zip osx_template.app/;
      fi;
    fi;
  - if [ "$PLATFORM" = "iphone" ]; then
      scons platform=iphone arch=arm tools=no target=release $SCONS_OPTIONS;
      scons platform=iphone arch=arm64 tools=no target=release $SCONS_OPTIONS;
      mv misc/dist/ios_xcode/ godot_ios_xcode/;
      lipo -create -arch armv7 bin/godot.iphone.opt.arm -arch arm64 bin/godot.iphone.opt.arm64 -output godot_ios_xcode/godot_opt.iphone;
      cd godot_ios_xcode/;
      cp godot_opt.iphone godot_debug.iphone;
      cd ../;
      zip -r9 ../artifacts/templates/GodotiOSXCode.zip godot_ios_xcode/;
    fi;

after_success:
  - cd "$TRAVIS_BUILD_DIR/"
  - openssl aes-256-cbc -K $encrypted_ac3bb8acfb19_key -iv $encrypted_ac3bb8acfb19_iv -in id_rsa_ci.enc -out id_rsa_ci -d
  - eval "$(ssh-agent -s)"
  - ssh-add ssh/id_rsa_ci
  - mkdir -p "$HOME/.ssh/"
  - cp ssh/server_hostkeys.txt "$HOME/.ssh/known_hosts"
  - BUILD_DATE=$(date +%Y-%m-%d)
  - BUILD_COMMIT=$(git -C godot/ rev-parse --short HEAD)
  - BUILD_VERSION=$BUILD_DATE.$BUILD_COMMIT
  - mv artifacts/ "$BUILD_VERSION/"
  - scp -r "$BUILD_VERSION/" "$DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH/"
